import{_ as s,c as a,o as e,aa as n}from"./chunks/framework.DOnJscRE.js";const u=JSON.parse('{"title":"01 Mysql的安装教程","description":"","frontmatter":{"title":"01 Mysql的安装教程","author":"Herman","updateTime":"2024-08-11 21:34","desc":"本篇文章主要记录两种MySQL的安装方式，以及如何重置用户登陆密码，如何开启远程访问","categories":"中间件","tags":"mysql","outline":"deep"},"headers":[],"relativePath":"Notes/No2TechColumn/07 MySql/01 Mysql的安装教程.md","filePath":"Notes/No2TechColumn/07 MySql/01 Mysql的安装教程.md","lastUpdated":1761191857000}'),t={name:"Notes/No2TechColumn/07 MySql/01 Mysql的安装教程.md"},l=n(`<p>本篇文章主要记录两种MySQL的安装方式，以及如何重置用户登陆密码，如何开启远程访问</p><h2 id="通过docker镜像安装mysql" tabindex="-1">通过Docker镜像安装MySql <a class="header-anchor" href="#通过docker镜像安装mysql" aria-label="Permalink to &quot;通过Docker镜像安装MySql&quot;">​</a></h2><p>官方安装文档：<a href="https://hub.docker.com/_/mysql" target="_blank" rel="noreferrer">https://hub.docker.com/_/mysql</a></p><p>使用Docker安装MySql十分的简单，执行以下命令即可运行MySQL服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run --name mysql-server -v /my/own/datadir:/var/lib/mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7.35</span></span></code></pre></div><p>参数说明：</p><ul><li><code>/my/custom</code>: 这个目录是主机上的目录，可以替换成自己的目录，该目录用于存放MySQL的配置文件my.cnf; (my.cnf的内容本文后面会有)</li><li><code>MYSQL_ROOT_PASSWORD</code>: 指定root的登陆密码，更多的环境变了可以参考上面给出的官方安装文档</li><li><code>mysql:5.7.35</code>: 表示运行5.7.35版本的mysql，如果需要使用其他版本号可以在文档中找 <a href="https://hub.docker.com/_/mysql?tab=tags&amp;page=1&amp;ordering=last_updated" target="_blank" rel="noreferrer">https://hub.docker.com/_/mysql?tab=tags&amp;page=1&amp;ordering=last_updated</a></li><li><code>/my/own/datadir</code>: 需要替换成自己的目录，该目录用户存放Mysql的数据库文件</li></ul><h2 id="通过官方安装包安装mysql" tabindex="-1">通过官方安装包安装MySql <a class="header-anchor" href="#通过官方安装包安装mysql" aria-label="Permalink to &quot;通过官方安装包安装MySql&quot;">​</a></h2><h4 id="_1-首先创建mysql用户和mysql组" tabindex="-1">1. 首先创建mysql用户和mysql组 <a class="header-anchor" href="#_1-首先创建mysql用户和mysql组" aria-label="Permalink to &quot;1. 首先创建mysql用户和mysql组&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>groupadd mysql </span></span>
<span class="line"><span>useradd -r -g mysql mysql</span></span></code></pre></div><h4 id="_2-去mysql的官网下载安装包" tabindex="-1">2. 去MySQL的官网下载安装包 <a class="header-anchor" href="#_2-去mysql的官网下载安装包" aria-label="Permalink to &quot;2. 去MySQL的官网下载安装包&quot;">​</a></h4><p>官方下载地址：<a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noreferrer">https://downloads.mysql.com/archives/community/</a>;</p><p>这里可以选择不同的版本号，这里我们选择5.7.34 <img src="https://cdn.jsdelivr.net/gh/silently9527/images/008i3skNgy1gtxrzg7w7wj61630h076v02.jpg" alt=""></p><h4 id="_3-下载完成之后就进行解压-进入到安装目录-执行以下命令初始化数据文件" tabindex="-1">3. 下载完成之后就进行解压，进入到安装目录，执行以下命令初始化数据文件 <a class="header-anchor" href="#_3-下载完成之后就进行解压-进入到安装目录-执行以下命令初始化数据文件" aria-label="Permalink to &quot;3. 下载完成之后就进行解压，进入到安装目录，执行以下命令初始化数据文件&quot;">​</a></h4><p><img src="https://cdn.jsdelivr.net/gh/silently9527/images/008i3skNgy1gtxs38kkb3j6118038mxp02.jpg" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bin/mysqld --initialize --user=mysql --datadir=./data --basedir=.</span></span></code></pre></div><p><strong>注意在初始化数据完成之后会输出数据库的初始化密码，记得先保存下来</strong><img src="https://cdn.jsdelivr.net/gh/silently9527/images/008i3skNgy1gtxub3urkdj60qe02laar02.jpg" alt=""></p><blockquote><p>如果在安装目录下没有<code>data</code>目录就手动创建一个</p></blockquote><h4 id="_4-将support-files下的my-default-cnf改名为my-cnf-拷贝到-etc目录下-修改my-cnf的内容如下" tabindex="-1">4. 将<code>support-files</code>下的<code>my-default.cnf</code>改名为<code>my.cnf</code>,拷贝到<code>/etc</code>目录下,修改<code>my.cnf</code>的内容如下 <a class="header-anchor" href="#_4-将support-files下的my-default-cnf改名为my-cnf-拷贝到-etc目录下-修改my-cnf的内容如下" aria-label="Permalink to &quot;4. 将\`support-files\`下的\`my-default.cnf\`改名为\`my.cnf\`,拷贝到\`/etc\`目录下,修改\`my.cnf\`的内容如下&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[mysqld]</span></span>
<span class="line"><span>basedir=/storage/mysql5.7.34</span></span>
<span class="line"><span>datadir=/storage/mysql5.7.34/data</span></span>
<span class="line"><span># Disabling symbolic-links is recommended to prevent assorted security risks</span></span>
<span class="line"><span>symbolic-links=0</span></span>
<span class="line"><span># Settings user and group are ignored when systemd is used.</span></span>
<span class="line"><span># If you need to run mysqld under a different user or group,</span></span>
<span class="line"><span># customize your systemd unit file for mariadb according to the</span></span>
<span class="line"><span># instructions in http://fedoraproject.org/wiki/Systemd</span></span>
<span class="line"><span>port=3309</span></span>
<span class="line"><span>sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span></span>
<span class="line"><span>lower_case_table_names=1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#</span></span>
<span class="line"><span># include all files from the config directory</span></span>
<span class="line"><span>#</span></span>
<span class="line"><span>!includedir /etc/my.cnf.d</span></span></code></pre></div><ul><li>1). 如果<code>my-default.cnf</code>内容不存在，也可以自己手动创建一个<code>my.cnf</code>把上面的内容拷贝到里面去</li><li>2). 其中<code>basedir</code>就是MySQL的安装文件根目录，<code>datadir</code>就是在初始化数据文件时指定的目录</li></ul><h4 id="_5-设置mysql以服务运行并且开机启动" tabindex="-1">5. 设置mysql以服务运行并且开机启动 <a class="header-anchor" href="#_5-设置mysql以服务运行并且开机启动" aria-label="Permalink to &quot;5. 设置mysql以服务运行并且开机启动&quot;">​</a></h4><p>将support-files/mysql.server 拷贝为/etc/init.d/mysql并设置运行权限</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cp mysql.server /etc/init.d/mysql</span></span>
<span class="line"><span>chmod +x /etc/init.d/mysql</span></span></code></pre></div><p>把mysql注册为开机启动的服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>chkconfig --add mysql</span></span></code></pre></div><p>启动/停止mysql/重启/查看MySQL运行状态</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl start mysql</span></span>
<span class="line"><span>systemctl stop mysql</span></span>
<span class="line"><span>systemctl restart mysql</span></span>
<span class="line"><span>systemctl status mysql</span></span></code></pre></div><p>至此MySQL就安装完成了，接下来还需要重新设置root的密码</p><h4 id="_6-重置root的密码" tabindex="-1">6. 重置root的密码 <a class="header-anchor" href="#_6-重置root的密码" aria-label="Permalink to &quot;6. 重置root的密码&quot;">​</a></h4><p>使用如下命令连接登陆到mysql</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bin/mysql --port=3309 -uroot -p</span></span></code></pre></div><p>在此时输入刚才保存好的初始化密码即可登陆成功</p><p>然后输入以下命令来修改密码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;输入你的新密码&#39;;</span></span></code></pre></div><h2 id="开启mysql的远程访问" tabindex="-1">开启MySQL的远程访问 <a class="header-anchor" href="#开启mysql的远程访问" aria-label="Permalink to &quot;开启MySQL的远程访问&quot;">​</a></h2><ol><li>首先还是需要先登陆到MySQL <code>bin/mysql --port=3309 -uroot -p</code></li><li>赋予任何主机远程访问数据的权限</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL PRIVILEGES ON *.* TO &#39;myuser&#39;@&#39;%&#39;IDENTIFIED BY &#39;mypassword&#39; WITH GRANT OPTION;</span></span></code></pre></div><p>这里的<code>myuser</code>是MySQL中的用户，<code>mypassword</code>设置的是该用户远程访问的密码，<strong>请不要和之前设置的本地密码混淆</strong>；</p><p>如果你只想要让指定的ip能够远程访问，可以把<code>%</code>修改成具体的ip，比如root账号只能通过<code>192.168.1.3</code>连接成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;192.168.1.3&#39;IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;</span></span></code></pre></div><ol start="3"><li>刷新权限生效</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre></div><ol start="4"><li>退出MySQL服务器</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>EXIT;</span></span></code></pre></div><p>这样就可以在其它任何的主机上以root身份登录</p>`,46),p=[l];function i(o,c,d,r,h,m){return e(),a("div",null,p)}const g=s(t,[["render",i]]);export{u as __pageData,g as default};
