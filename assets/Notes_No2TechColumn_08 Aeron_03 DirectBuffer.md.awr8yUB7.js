import{_ as e,c as t,o as r,aa as a}from"./chunks/framework.DOnJscRE.js";const h=JSON.parse('{"title":"03 Direct Buffer","description":"","frontmatter":{"title":"03 Direct Buffer","author":"Herman","updateTime":"2025-10-20 12:34","desc":"Aeron","categories":"Aeron","tags":"Aeron","outline":"deep"},"headers":[],"relativePath":"Notes/No2TechColumn/08 Aeron/03 DirectBuffer.md","filePath":"Notes/No2TechColumn/08 Aeron/03 DirectBuffer.md","lastUpdated":1761052119000}'),n={name:"Notes/No2TechColumn/08 Aeron/03 DirectBuffer.md"},o=a('<p>Agrona 使用sun.misc.Unsafe和 ，sun.nio.ch.SelectorImpl.selectedKeys这将导致 JVM 在启动时引发一些有关非法反射访问的警告日志条目。要删除警告，请添加以下 JVM 参数：--add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens jdk.unsupported/sun.misc=ALL-UNNAMED</p><p>Agrona 默认情况下将使用系统字节顺序。如果您的组件以不同的字节序运行，则应指定在使用 DirectBuffer 进行读取或写入时使用的字节序。</p><p><img src="https://cdn.jsdelivr.net/gh/silently9527/images//202510212058902.png" alt=""></p><p>Agrona提供了三种实现：</p><ul><li>UnsafeBuffer: 固定大小缓冲区。你首先分配给定大小的 ByteBuffer。提供尽可能最佳的性能，但如果所需容量超过可用容量，则不会调整自动大小，将抛出异常<code>IndexOutOfBoundsException</code>。</li><li>ExpandableDirectByteBuffer: 可扩展并由直接 ByteBuffer 支持的直接缓冲区。默认大小为 128 字节，但可以使用构造函数轻松设置ExpandableDirectByteBuffer(int initialSize)。如果数组需要扩展超出其当前大小，则会分配一个新的 ByteBuffer 并复制内容</li><li>ExpandableArrayBuffer: 由字节数组支持的缓冲区（即用 分配new byte[size]）。当需要调整大小时，byte[]会创建一个新的并复制内容</li></ul><h5 id="字节顺序" tabindex="-1">字节顺序 <a class="header-anchor" href="#字节顺序" aria-label="Permalink to &quot;字节顺序&quot;">​</a></h5><p>Agrona 允许您设置特定的字节顺序，如果没有，它将默认为 提供的顺序ByteOrder.nativeOrder()。使用不同字节顺序读取和写入数据会损坏数据。当跨越平台或操作系统时，可能会发生这种情况。</p><p>原文链接: <a href="http://herman7z.site" target="_blank" rel="noreferrer">http://herman7z.site</a></p>',8),i=[o];function s(c,f,l,d,p,u){return r(),t("div",null,i)}const B=e(n,[["render",s]]);export{h as __pageData,B as default};
